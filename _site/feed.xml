<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steve X Chen</title>
    <description>Welcome to Steve X. Chen's site</description>
    <link>http://stevexchen.com/</link>
    <atom:link href="http://stevexchen.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>CSS FlexBox Properties</title>
        <description>&lt;h1 id=&quot;css-flex-box&quot;&gt;CSS FLEX BOX&lt;/h1&gt;
&lt;p&gt;is a new method to layout, align and distribute space among items in a container, even when their size is unknown and/or dynamic. It arose out of the many screen sizes available today. &lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  display: flex;
  flex-direction: row | column;
  flex-wrap: wrap | nowrap | wrap-reverse;
  justify-content: flex-start | flex-end | center | space-between | space-around; 
  align-items: flex-start | flex-end | center | baseline | stretch; 
}

.item {
  order: &lt;integer&gt;;
  flex-grow: &lt;integer&gt;;
  flex-shrink: &lt;integer&gt;;
  flex-basis: &lt;length&gt; | auto;
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}



## Container (parent) properties

__display__: initiate the flex layout

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  display: flex; /* inline-flex */
}
&lt;/code&gt;&lt;/pre&gt;

__flex-direction__: the direction of the flex

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  flex-direction: 
      row | row-reverse | column | column-reverse;
}
&lt;/code&gt;&lt;/pre&gt;

row: left to right
row-reverse: right to left
column: top to bottom 
column-reverse: bottom to top

__flex-wrap__: items will all try to fit onto one line, unless you define it by allowing items to wrap

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  flex-wrap: 
    wrap | nowrap | wrap-reverse
}
&lt;/code&gt;&lt;/pre&gt;

__flex-flow__: a shorthand for flex-direction and flex-wrap

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  flex-flow: &amp;lt;'flex-direction'&amp;gt; || &amp;lt;'flex-wrap'&amp;gt;
    /* default: row nowrap */
}
&lt;/code&gt;&lt;/pre&gt;

__justify-content__: defines alignment along the main axis (defined by flex-direction)

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  justify-content: 
    flex-start (default) | flex-end | center 
    | space-between | space-around
}
&lt;/code&gt;&lt;/pre&gt;

- _flex-start_: items are aligned to start line
- _flex-end_: items are aligned to end line
- _center_: items are centered along the line 
- _space-between_: items evenly distributed in the line, first item at start line, last item on the end line
- _space-around_: items are evenly distributed in the line with equal space around them


__align-items__: defines default behaviour for how flex items are laid out along the cross-axis on the current line. 

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  align-items: 
    flex-start | flex-end | center | baseline 
    | stretch (default)
}
&lt;/code&gt;&lt;/pre&gt;
    
__align-content__ 

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.container {
  align-content: 
    flex-start | flex-end | center | space-between | space-around
    | stretch (default)
}
&lt;/code&gt;&lt;/pre&gt;


## Item (child) properties

__order__: control the order of items

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  order: &lt;integer&gt;
}



__flex-grow__: allow item to grow in size if necessary

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  flex-grow: &lt;number&gt; /* default 0 */
}


if all child elements have flex-grow = 1, then they all have equal size, but if one were to have a flex-grow =2, then it will be twice as large as the others. 

__flex-shrink__: allow item to shrink if necessary

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  flex-shrink: &lt;number&gt; /* default 1 */
}


__flex-basis__: defines the default size of element before remaining space is distributed 

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  flex-bases &lt;length&gt; | auto /* default auto */
}


__flex__: shorthand for flex-grow, flex-shrink, flex-basis. flex-shrink and flex-basis are optional. Default is 0 1 auto;

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  flex none | [&amp;lt;'flex-grow'&amp;gt;] &amp;lt;'flex-shrink'&amp;gt;? || &amp;lt;'flex-basis'&amp;gt; ]
    /* default: 0 1 auto */
}
&lt;/code&gt;&lt;/pre&gt;

__align-self__: allows the default alignment (assigned by align-items) to be overridden for individual items. 

&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;
.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch
}
&lt;/code&gt;&lt;/pre&gt;












&lt;/length&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/number&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/number&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/integer&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/length&gt;&lt;/integer&gt;&lt;/integer&gt;&lt;/integer&gt;&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 03 Jul 2014 07:37:26 -0400</pubDate>
        <link>http://stevexchen.com/css3/2014/07/03/css-flexbox-properties/</link>
        <guid isPermaLink="true">http://stevexchen.com/css3/2014/07/03/css-flexbox-properties/</guid>
      </item>
    
      <item>
        <title>Blog Parameters</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi('Tom')
#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 28 Jun 2014 07:37:26 -0400</pubDate>
        <link>http://stevexchen.com/jekyll/2014/06/28/blog-parameters/</link>
        <guid isPermaLink="true">http://stevexchen.com/jekyll/2014/06/28/blog-parameters/</guid>
      </item>
    
      <item>
        <title>Using Jekyll for blogging</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi('Tom')
#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 27 Jun 2014 07:37:26 -0400</pubDate>
        <link>http://stevexchen.com/jekyll/update/2014/06/27/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://stevexchen.com/jekyll/update/2014/06/27/welcome-to-jekyll/</guid>
      </item>
    
      <item>
        <title>test 2 post</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi('Tom')
#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 23 Jun 2014 07:37:26 -0400</pubDate>
        <link>http://stevexchen.com/jekyll/2014/06/23/blog-parameters/</link>
        <guid isPermaLink="true">http://stevexchen.com/jekyll/2014/06/23/blog-parameters/</guid>
      </item>
    
  </channel>
</rss>
